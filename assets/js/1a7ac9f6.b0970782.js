"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3419],{165:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var n=i(5893),s=i(1151);const o={title:"Subordinate Bot Integration",sidebar_position:5,description:"sample page",custom_edit_url:null},a=void 0,r={id:"Business Overview/Capabilities/subordinate_bot_int",title:"Subordinate Bot Integration",description:"sample page",source:"@site/docs/01-Business Overview/02-Capabilities/06-subordinate_bot_int.mdx",sourceDirName:"01-Business Overview/02-Capabilities",slug:"/Business Overview/Capabilities/subordinate_bot_int",permalink:"/solution-unified-virtual-assistant/Business Overview/Capabilities/subordinate_bot_int",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Subordinate Bot Integration",sidebar_position:5,description:"sample page",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Governance",permalink:"/solution-unified-virtual-assistant/Business Overview/Capabilities/Governance"},next:{title:"Software Requirements",permalink:"/solution-unified-virtual-assistant/Prepare/Requirements"}},l={},u=[{value:"Overview",id:"overview",level:2},{value:"Solution Implementation",id:"solution-implementation",level:2}];function c(e){const t={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsx)("div",{style:{borderBottom:"1px solid #000",marginTop:"20px",marginBottom:"20px"}}),"\n",(0,n.jsx)(t.p,{children:"One aspect of creating a unifying platform is the ability to connect and interface with existing chatbots which may have their own data corpuses or access policies. The parent or unifying agent should be able to hand-off requests to the relevant chatbots.\nFor example, if there is an existing chatbot which has access to financial analyst reports data source, the parent/unifying bot should be able to hand-off questions to that chatbot's domain and return it back to the user in the parent bot."}),"\n",(0,n.jsx)(t.h2,{id:"solution-implementation",children:"Solution Implementation"}),"\n",(0,n.jsx)("div",{style:{borderBottom:"1px solid #000",marginTop:"20px",marginBottom:"20px"}}),"\n",(0,n.jsx)(t.p,{children:"To implement this capability another assistant is required either with watsonx Assistant or within the assistant builder in watsonx Orchestrate. There are two ways to configure this solution:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/Create/Subordinate%20Bots/assistant_custom_extension",children:"Assistant Custom Extension"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/Create/Subordinate%20Bots/watsonx_orchestrate",children:"watsonx Orchestrate Skill Flow"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>r,a:()=>a});var n=i(7294);const s={},o=n.createContext(s);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);